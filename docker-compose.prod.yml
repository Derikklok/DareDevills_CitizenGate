version: "3.8"

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: citizengate-db-prod
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME:-citizengate}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - citizengate-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-citizengate}",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  # NestJS Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    container_name: citizengate-server-prod
    restart: always
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-citizengate}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD}
      CLERK_PUBLISHABLE_KEY: ${CLERK_PUBLISHABLE_KEY}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      PLUNK_API_KEY: ${PLUNK_API_KEY}
      JWT_SECRET: ${JWT_SECRET}
    expose:
      - "3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - citizengate-network
    healthcheck:
      test: ["CMD-SHELL", "node healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Vite Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
    container_name: citizengate-client-prod
    restart: always
    ports:
      - "${CLIENT_PORT:-80}:80"
    depends_on:
      - server
    networks:
      - citizengate-network

  # Nginx Reverse Proxy (Optional - for advanced production setup)
  nginx:
    image: nginx:alpine
    container_name: citizengate-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - client
      - server
    networks:
      - citizengate-network
    profiles:
      - advanced

volumes:
  postgres_data:
    driver: local

networks:
  citizengate-network:
    driver: bridge
