import type { Department, CreateDepartmentDto, UpdateDepartmentDto } from "@/lib/admin/types";
import { getNormalizedApiUrl } from '../apiUtils';

const normalizedApiUrl = getNormalizedApiUrl(import.meta.env.VITE_normalizedApiUrl || 'http://localhost:3000');

/**
 * Fetch all departments
 */
export async function fetchDepartments(token: string): Promise<Department[]> {
  if (!token) {
    throw new Error('Authentication token is required');
  }

  const response = await fetch(
    `${normalizedApiUrl}/api/departments`,
    {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    }
  );

  if (!response.ok) {
    const errorText = await response.text();
    throw new Error(`Failed to fetch departments: ${response.status} ${errorText}`);
  }

  return response.json();
}

/**
 * Fetch a single department by ID
 */
export async function fetchDepartmentById(departmentId: number, token: string): Promise<Department> {
  if (!token) {
    throw new Error('Authentication token is required');
  }

  const response = await fetch(
    `${normalizedApiUrl}/api/departments/${departmentId}`,
    {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    }
  );

  if (!response.ok) {
    const errorText = await response.text();
    throw new Error(`Failed to fetch department: ${response.status} ${errorText}`);
  }

  return response.json();
}

/**
 * Create a new department
 */
export async function createDepartment(departmentData: CreateDepartmentDto, token: string): Promise<Department> {
  if (!token) {
    throw new Error('Authentication token is required');
  }

  const response = await fetch(
    `${normalizedApiUrl}/api/departments`,
    {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify(departmentData)
    }
  );

  if (!response.ok) {
    const errorText = await response.text();
    throw new Error(`Failed to create department: ${response.status} ${errorText}`);
  }

  return response.json();
}

/**
 * Update an existing department
 */
export async function updateDepartment(departmentId: number, departmentData: UpdateDepartmentDto, token: string): Promise<Department> {
  if (!token) {
    throw new Error('Authentication token is required');
  }

  const response = await fetch(
    `${normalizedApiUrl}/api/departments/${departmentId}`,
    {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify(departmentData)
    }
  );

  if (!response.ok) {
    const errorText = await response.text();
    throw new Error(`Failed to update department: ${response.status} ${errorText}`);
  }

  return response.json();
}

/**
 * Delete a department
 */
export async function deleteDepartment(departmentId: number, token: string): Promise<void> {
  if (!token) {
    throw new Error('Authentication token is required');
  }

  const response = await fetch(
    `${normalizedApiUrl}/api/departments/${departmentId}`,
    {
      method: 'DELETE',
      headers: {
        Authorization: `Bearer ${token}`,
      },
    }
  );

  if (!response.ok) {
    const errorText = await response.text();
    throw new Error(`Failed to delete department: ${response.status} ${errorText}`);
  }
}

/**
 * Example usage of the department API with the provided token
 *
 * @example
 * // Create a new department
 * const createDepartmentExample = async () => {
 *   const token = "eyJhbGciOiJSUzI1NiIsImNhdCI6ImNsX0I3ZDRQRDIyMkFBQSIsImtpZCI6Imluc18zMUNhM1lqaUduYkd5OFUzVVFscGRFb3ZjeHAiLCJ0eXAiOiJKV1QifQ.eyJhenAiOiJodHRwOi8vbG9jYWxob3N0OjUxNzMiLCJleHAiOjE3NTYxODM3MzQsImlhdCI6MTc1NTE4MzczNCwiaXNzIjoiaHR0cHM6Ly9icmF2ZS1ndXBweS01OS5jbGVyay5hY2NvdW50cy5kZXYiLCJqdGkiOiJjYWViMDdjMjZjZTMxZTEyMWIwNCIsIm5iZiI6MTc1NTE4MzcyOSwib3JnX2lkIjoib3JnXzMxQ3R6bzdvWTZOVXU1SDZJeWxQS0Nmd1hWdCIsIm9yZ19wZXJtaXNzaW9ucyI6W10sIm9yZ19yb2xlIjoib3JnOmFkbWluIiwib3JnX3NsdWciOiJkZXBhcnRtZW50LW1vdG9yLXRyYWZmaWMiLCJzdWIiOiJ1c2VyXzMxSFJsOTRHZm44SjZibmVxTVMxWjF2NVo1YSJ9.FZQcUA3RKwF5YAqdjJ_1mftQI4sJXYoIDToVwB8XyT1EKNmW5vPn4q31JVK3iULmgv7lz7_VdpEhq81zXiRJIYRp2Dr2wCImY_KY-euTreG6fo-WZVz9Gqpj3jcXP8VCTWbty2eszqsN5ETNcVvySM9v3PvX6J8X9jC0t3wJNBFuY3J8e7i6Dfs_YYQSBnlMrkS2m55ghk6tOrnYHShhea7uWqqAZdZs8vX2p6AjA6YMRHChxavvRyE8x4R1pFSM4J6eJokaFt29pKDEumdTz5D8ecLnnLWKxJNK84y73VwnTZAp98zQ9ZxvI13haMRHTW4kvZRb9HgIjQCxuBchVg";
 *
 *   // Sample request body - clerk_org_id is automatically generated by the server
 *   const newDepartment = {
 *     name: "Ministry of Technology",
 *     description: "Handles agricultures of the country",
 *     address: "No 23, rewathva, Colombo.",
 *     contact_email: "Technology@gov.lk",
 *     contact_phone: "0112555666"
 *   };
 *
 *   try {
 *     const department = await createDepartment(newDepartment, token);
 *     console.log("Created department:", department);
 *     // Response will include the automatically generated clerk_org_id, department_id,
 *     // created_at and updated_at fields
 *   } catch (error) {
 *     console.error("Error creating department:", error);
 *   }
 * };
 *
 * @example
 * // Update an existing department
 * const updateDepartmentExample = async () => {
 *   const token = "eyJhbGciOiJSUzI1NiIsImNhdCI6ImNsX0I3ZDRQRDIyMkFBQSIsImtpZCI6Imluc18zMUNhM1lqaUduYkd5OFUzVVFscGRFb3ZjeHAiLCJ0eXAiOiJKV1QifQ.eyJhenAiOiJodHRwOi8vbG9jYWxob3N0OjUxNzMiLCJleHAiOjE3NTYxODM3MzQsImlhdCI6MTc1NTE4MzczNCwiaXNzIjoiaHR0cHM6Ly9icmF2ZS1ndXBweS01OS5jbGVyay5hY2NvdW50cy5kZXYiLCJqdGkiOiJjYWViMDdjMjZjZTMxZTEyMWIwNCIsIm5iZiI6MTc1NTE4MzcyOSwib3JnX2lkIjoib3JnXzMxQ3R6bzdvWTZOVXU1SDZJeWxQS0Nmd1hWdCIsIm9yZ19wZXJtaXNzaW9ucyI6W10sIm9yZ19yb2xlIjoib3JnOmFkbWluIiwib3JnX3NsdWciOiJkZXBhcnRtZW50LW1vdG9yLXRyYWZmaWMiLCJzdWIiOiJ1c2VyXzMxSFJsOTRHZm44SjZibmVxTVMxWjF2NVo1YSJ9.FZQcUA3RKwF5YAqdjJ_1mftQI4sJXYoIDToVwB8XyT1EKNmW5vPn4q31JVK3iULmgv7lz7_VdpEhq81zXiRJIYRp2Dr2wCImY_KY-euTreG6fo-WZVz9Gqpj3jcXP8VCTWbty2eszqsN5ETNcVvySM9v3PvX6J8X9jC0t3wJNBFuY3J8e7i6Dfs_YYQSBnlMrkS2m55ghk6tOrnYHShhea7uWqqAZdZs8vX2p6AjA6YMRHChxavvRyE8x4R1pFSM4J6eJokaFt29pKDEumdTz5D8ecLnnLWKxJNK84y73VwnTZAp98zQ9ZxvI13haMRHTW4kvZRb9HgIjQCxuBchVg";
 *
 *   // Sample PUT request body for updating department with ID 4
 *   const departmentId = 4;
 *   const updateData = {
 *     name: "Ministry of Finance",
 *     address: "address updated",
 *     contact_email: "mfinance@gov.lk",
 *     contact_phone: "0112444555",
 *     clerk_org_id: "org_31HbAIzotNveFftPjbd2AAfE4Up"
 *   };
 *
 *   try {
 *     const department = await updateDepartment(departmentId, updateData, token);
 *     console.log("Updated department:", department);
 *   } catch (error) {
 *     console.error("Error updating department:", error);
 *   }
 * };
 */
