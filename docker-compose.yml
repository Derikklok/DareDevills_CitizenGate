version: "3.8"

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: citizengate-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-citizengate}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - citizengate-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-citizengate}",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  # NestJS Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    container_name: citizengate-server
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3000
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-citizengate}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      CLERK_PUBLISHABLE_KEY: ${CLERK_PUBLISHABLE_KEY}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      PLUNK_API_KEY: ${PLUNK_API_KEY}
    ports:
      - "${SERVER_PORT:-3000}:3000"
    volumes:
      - ./server:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      db:
        condition: service_healthy
    networks:
      - citizengate-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Vite Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    container_name: citizengate-client
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3000}
      VITE_CLERK_PUBLISHABLE_KEY: ${VITE_CLERK_PUBLISHABLE_KEY}
    ports:
      - "${CLIENT_PORT:-5173}:${NODE_ENV:-development == 'production' && 80 || 5173}"
    volumes:
      # Only mount source code in development
      - ./client:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      - server
    networks:
      - citizengate-network
    command: >
      sh -c "if [ '${NODE_ENV:-development}' = 'production' ]; then
               nginx -g 'daemon off;'
             else
               pnpm run dev --host 0.0.0.0
             fi"

volumes:
  postgres_data:
    driver: local

networks:
  citizengate-network:
    driver: bridge
